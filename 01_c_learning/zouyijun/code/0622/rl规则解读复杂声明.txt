1、复杂类型声明：
int (*func)(int *);
int (*func[2])(int *);
int (*(*func)[2])(int *);

int (*(*func)(int *))[2];
int*(*(*func)(int *))[2];
int (*func)(int *, int (*)(int *));
int*(*(*func)[2])(int* (*)[2], void (*)(int (*)[2]));

int func[2](void);  
int func(void)[2]; 

int *(*func(int (*)[2], 
int (*(*)(int (*)(int, int), int (*)[2]))[2]))[2];

2、请为下列变量和函数编写声明：
1）p是指向函数的指针，并且此函数以字符型指针作为实际参数，函数返回的也是字符型指针。
	char *(*p)(char *);
2）a是含有4个元素的数组，且每个元素都是指向函数的指针，而这些函数都是没有实际参数且无返回值的。a的元素初始指向的函数分别是f1, f2, f3, f4。
	void(*a[4])(void) = {f1,f2,f3,f4};

3) f是带有两个实际参数的函数：一个参数是指向结构的指针p, 且此结构标签为t; 另一个参数是长整数n. f返回指向函数的指针，且指向的函数没有实际参数也无返回值。
	void (*f(struct t *p, long n))(void);

4) b是含有10个元素的数组，且每个元素都是指向函数的指针，而这些函数都有两个int型实际参数且返回标签为t的结构。
	struct t(*b[10])(int, int);

