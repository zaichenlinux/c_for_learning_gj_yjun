# 注释 #
#Makefile 是一种编译规则，最终调用编译器来编译整个工程。一个工程中很有多源文件，很多库，而且按照模块分别在若干个目录下，makefile定义一系列规则来编译文件，可以规定哪些文件先编译，哪些文件后编译，从而控制整个工程的编译。
#命名：  makefile或者Makefile，不能写其他的名字。建议用Makefile

#基本的语法 以规则为单位
#目标(标签):条件(依赖)
#（tab）命令列表

#执行makefile  
#make  标签或者目标
#make 后面什么都不跟，系统默认会执行第一个目标。
# #注释，只能单行注释。

#变量
# = :=  += ?=
#$变量名  取该变量的值

A = 10
#:=  立即展开赋值 
C := $A $B
#=  延迟展开赋值
G = $A $B
B = 20

#在Makefile,如果变量名超过一个字母，需要用（）{} 扩起来
#否则只有$后面的第一个字母有效
#延迟展开赋值，要防止递归赋值
#aa = $(bb)
#bb = $(aa)

D = $B
#条件赋值，如果D已经赋值,哪怕是空值，此时不会将A的变量的值赋值给D
#否则就赋值
D ?= $A
#E = 30
#追加赋值，如果E变量有值，那么追加赋值会把新的值直接拼接在原值的后面。
E += $A

all:
	echo $C
	echo $G
#	echo $(aa)
	echo $D
	echo $E



#test:
#	ls -alh

#test2:
#	echo "hello world"




