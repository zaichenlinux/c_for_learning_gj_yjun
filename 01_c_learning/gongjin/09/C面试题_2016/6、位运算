
1、用<<、>>、|、&实现一个WORD(字，两个字节)（ABCD）的高低位交换。【美国著名计算机软件公司面试题】


2、判断一个数是否是2的次方？


3、评价下面的代码片断：
unsigned int zero = 0; 
unsigned int compzero = 0xFFFF; /*complement(补码) of zero */

反码：原码每一位取反
正数的补码 = 原码
负数的补码 = 负数的绝对值的原码，每一位取反， 最后加1


4、求下面函数的返回值，假定输入x = 9999。（微软）
int func(x)
{
    int count = 0;
    while(x) {
		count++;
		x = x&(x-1);
    }
    return count;    
}  
//9999 - 8192 = 1807 - 1024 = 783 - 512 = 271 - 256 = 15 - 8 = 7
//9999 = 8192 + 1024 + 512 + 256 + 8 + 7

5、下面的程序试图使用“位操作”来完成“乘5”的操作，不过这个程序中有个BUG，你知道是什么吗？
#include <stdio.h>
#define PrintInt(expr) printf("%s : %d\n",#expr,(expr))
int FiveTimes(int a)  
{
    int t;
    t = a << 2 + a; 
    return t;
}
int main()  
{
    int a = 1, b = 2, c = 3;
    PrintInt(FiveTimes(a));
    PrintInt(FiveTimes(b));
    PrintInt(FiveTimes(c));
    return 0;
}



6、如何判别一个数是unsigned。



7、用一条语句实现：取出一个数的2到5位。



8、如何将一个数a的第27位置1？清0？反转？	



9、嵌入式系统总是要用户对变量或寄存器进行位操作。给定一个整型变量a，写两段代码，第一个设置a的bit 3，第二个清除a 的bit 3。在以上两个操作中，要保持其它位不变。


	

10、输出结果
static void test21()
{
	printf("%d, %x, %x, %x\n", ~0, ~0 >> 8, ~0 << 8, ~0u >> 8);
	printf("%x, %x, %x, %d\n", 1 >> 1, -16, -16 >> 1, -16 >> 1);
}
   0001 0000
ffffff 1110 1111
ffffff f 0
ffffff f 8

-8



//-1（原码） = 10000000 00000000 00000000 00000001
//1（原码） = 00000000 00000000 00000000 00000001 
//取反      = 11111111 11111111 11111111 11111110
//+1		  = 11111111 11111111 11111111 11111111
